一、集合框架

    1、什么是集合？

       集合是将多个元素组成一个单元的对象；

       集合是将多个对象组合在一起，对这些对象进行存储、检索等操纵。

    2、集合的特点：

       1）集合中的元素可以是任意的引用类型；

       2）集合中只能存储对象，注意：集合中存储的是对象在堆中地址，即存储对象的引用；

       3）集合的长度可变，当元素数量超出容量时，自动增加当前容量的一倍。

    3、集合的体系结构

       Collection接口是集合的根接口；

       Set、List是Collection接口的直接子接口；

       Map接口和Collection接口没有任何关系；


       Set接口的实现类：HashSet、LinkedHashSet、TreeSet；

       List接口的实现类：ArrayList、LinkedList、Vector、Stack；

       Map接口的实现类：HashMap、LinkedHashMap、TreeMap

    4、Set（规则集）

       Set集合中的元素不重复。

       1）HashSet（散列集）

          集合中的元素无序且不重复。


       2）LinkedHashSet（链式散列集）

          继承HashSet类。
 
          集合中的元素有序（元素的插入顺序）且不重复。

   
       3）TreeSet（树形集）

          集合中的元素有序（自然顺序）且不重复。

          添加元素时，集合会对元素进行排序，排序就需要比较元素的大小，所以该集合中元素之间必须可比较。

       注意：集合中的元素顺序，在存储时确定。


    5、List（线性表）

       List集合中的元素可重复、有序（下标有序，插入顺序）。

       1）ArrayList（数组线性表）

          动态数组。

          集合中元素可重复，有序。

       2）LinkedList（链表）

          双向链表。

          集合中元素可重复，有序。

       
          思考：ArrayList与LinkedList的区别？

               ArrayList：底层动态数组，尾部追加、删除元素效率高，查询、修改效率高；

                          首部、中部插入或删除元素效率低，原因：插入元素前，原来的或其后的元素需后移；删除元素后，
                          其后的前移。

               LinkedList：底层双向链表，尾部追加、删除元素效率高，查询、修改效率慢；

                           首部、中部插入或删除元素效率高，原因：插入或删除前后，均不需要移动元素。

              
               使用场景：若只在尾部操作元素，使用ArrayList；若频繁的在首部、中部插入或删除元素，使用LinkedList。
           

       3）Vector（向量）

          动态数组。

          集合中元素可重复，有序。

          线程安全的。


       4）Stack（栈表）

          动态数组。

          集合中元素可重复，有序。

          继承Vector。

          线程安全的。

          特点：后进先出（LIFO，Last In First Out）

    6、Map（图）

       Map中的元素是一个键值对（key-value)，键不可以重复，值可以重复。

           注意：添加元素时，若图中已经存在这个元素的key，替换集合中key相同元素的值。

       Map就是将键映射到值的对象。

       1）HashMap（散列图）

          集合中的元素无序，键不可以重复，值可以重复。


       2）LinkedHashMap（链式散列图）

          集合中的元素有序（插入顺序、访问顺序），键不可以重复，值可以重复。


       4）TreeMap（树形图）

          集合中的元素有序（自然顺序），键不可以重复，值可以重复。

       思考：Hashtable 与 HashMap的区别？

           HashMap允许null键或null值，Hashtable不允许null键或null值；

           HashMap线程不安全，Hashtable线程安全；

           继承的类不同：HashMap继承AbstractMap，Hashtable继承Dictionary；

           方法不完全相同：HashMap取消了contains(Object value)方法；Hashtable存在rehash()方法，重组哈希表。


二、操作数组或集合工具类

    1、Arrays

       此类包含用来操作数组（比如排序和搜索）的各种方法


    2、Collections
           
       此类完全由在 collection 上进行操作或返回 collection 的静态方法组成。










修饰符：

    类的修饰符

        public

        final

        abstract


    类成员的修饰符

        public

        protedcted

        private

        static

        final

        abstract






练习：

   1、向集合中添加5个人名，再反向提取5个人名，取出时同时删除人名。

   2、使用一个集合中封装订单的数据：

      订单号                  

      店名                 联系电话

      客户信息：

          姓名             联系电话

          地址

      商品列表:

          商品名称            单价          数量


      

      

      


作业：


   1、设计程序实现动态数组的功能。

       元素个数超出数组容量时，数组容量自动扩充一倍。

   2、集合中添加人员对象，按照插入顺序输出人员信息。

   3、[可选]树集中添加学生对象，集合中元素按照学生成绩进行逆序排序。

   4、使用线性表实现仓库的进销存的小程序

      定义方法查询仓库中的商品基本信息；

          商品编号    商品名称     数量    单价

            0001       辣条        1000    ￥2

            0002      联想笔记本    50     ￥4500

      定义方法实现商品入库的功能；

      定义方法实现商品出库的功能。

   5、使用图集合封装不同类型的产品数据。

      产品类型：电子产品类、服装类、食品类、书籍类

      要求：不同的类别的产品均存在多种。

      循环输出格式：

          产品类别：

              商品名称        单价        数量 
   

      不要求顺序。 

   6、已知线性表中多个职员对象，使用Collections工具类，对职员进行按工资升序排序。     


























































