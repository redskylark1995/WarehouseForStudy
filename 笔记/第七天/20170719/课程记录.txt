一、变量的作用域

    1）成员变量

       类中方法外定义的变量。

       作用域：整个类。


    2）局部变量

       语句块中定义的变量。

       语句块：用{}括起来的一段语句。

       作用域：语句块，还要遵守：先定义，后使用。


二、this与super关键字

    this:

        this指向的是当前对象；

        this可以在实例方法中使用，不能在类方法中使用；

        this可以在构造方法中使用。

        this的使用：

            访问成员变量

                this.成员变量名;

            访问成员方法
 
                this.成员方法名(参数列表);

            访问其他构造方法

                this(参数列表);

                注意：访问构造方法，只能在构造方法中使用，且必须是第一行代码。


    super: 

        super指向当前对象的父类，一般用于访问被子类重写（覆盖）的属性和方法；

        super可以在实例方法中使用，不能在类方法中使用

        super可以在构造方法中使用。

             访问父类的成员变量

                 super.成员变量名;

             访问父类的成员方法

                 super.成员方法名(参数列表);

             访问父类的构造方法

                 super(参数列表);

                 注意：访问父类的构造方法，只能在构造方法中使用，且必须是第一行代码。

                 父类中没有无参构造方法，子类继承父类，必须使用"super(参数列表)"访问父类的某个构造方法，
                 否则编译不通过。

                     原因：

                        自定义了构造方法，默认的无参构造方法被替代，不再存在；

                        子类创建对象，先执行父类的构造方法，再执行自己的构造方法，默认情况下，执行无参数的构造方法。


三、package语句

    作为Java源文件的第一条语句，指明该文件中定义的类所在的包。

    语法格式：

        package pkg1[.pkg2[.pkg3…]];


        比如：

            package com.demo.tests;

四、import语句

    为使用定义在不同包中的Java类，需用import语句来引入所需要的类。

    一个包中的类若要访问另一个包中的类，就需要import语句来引入这个类或引入包中所有类。

    import语句书写在Java源文件首部，在package语句后，类声明之前。
 

    语法格式：

        import package1[.package2…].(classname |*);

            classname   引入单个类；

            *  引入包中所有类。

    java.lang包，是系统默认包，不需要引入，可以直接访问包中任意类。

五、Java内存结构分配

    Java的内存结构由JVM进行分配。


    1、栈

       方法中局部变量


    2、堆

       数组、对象、以及对象的实例变量


    3、方法区

       类加载后的信息，类变量、常量值


    4、寄存器（程序计数器）




    运行时栈帧结构   http://blog.csdn.net/zq602316498/article/details/38926607


六、语句块与静态语句块

    语句块：

        {
           
           语句；

        }

        创建对象时执行。

    静态语句块：

        简称为静态块。

        static {

            语句;

        }

        加载类时执行。

    静态语句块先于语句块执行；

    语句块与实例变量的定义（赋初值）的执行顺序与书写顺序相关；

    静态语句块与类变量的定义（赋初值）的执行顺序与书写顺序相关；

七、final关键字

    final：是一个修饰符，最终。

    修饰类

        最终类，该类不能被继承。

    修饰成员变量

        最终变量，只能赋值一次，不能进行第二次赋值，必须赋初值。

        三种赋值初值的方式：

            直接赋初值；

            构造方法中赋初值；

            语句块中赋初值。

    修饰局部变量

        最终变量，只能赋值一次，不能进行第二次赋值。

    修饰成员方法

        最终方法，不能被重写。

    final是在方法中唯一可以使用的修饰符。


修饰符：

    类的修饰符

        public

        final


    类成员的修饰符

        public

        protedcted

        private

        static

        final






练习：

   1、创建商品类,属性: 编号、名称、单价、数量、生产日期；

          定义两个构造方法：

              只初始化编号、名称属性；

              初始化所有属性；要求：不超出四行代码；

          定义输出基本信息的方法。

      
      创建服装类，继承商品类，属性：型号、颜色

          定义构造方法，初始化属性；要求：不超出三行代码；

          重写父类中输出基本信息的方法；

          定义方法，访问父类中被重写的方法。

      创建使用者类

          创建子类（服装类）的对象

              访问输出商品基本信息的方法；

              访问对象父类被隐藏的方法。


   2、创建连接池的数据源类（DatabasePoolSource），初始化数据源基本信息。

          属性：驱动名称、URL路径、用户名、密码、最大连接数、最小连接数、初始连接数、最大空闲时间、等待时间

          要求：

              类加载时初始化属性

              添加控制逻辑，最大连接数 > 最小连接数，最大连接数 > 初始连接数据


   3、[可选] 创建一个类，重写父类Object的clone(); 实现本类对象的克隆。

            

           




































































