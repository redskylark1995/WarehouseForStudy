一、构造器

    构造方法或构造函数

    介于创建对象的过程之中的，创建一个对象：new 构造方法名(参数列表)；可以理解为：构建对象的方法。

    构造方法一般用于初始化对象，就是给的对象的特征（类的属性）设初值。

    1、语法格式

       修饰符  类名([参数列表]) {
           
           //方法体

       }

    2、构造方法的特点：

       1）方法名称与类名相同；

       2）无返回值；

       3）修饰符只能是public、protected、private，即访问权限修饰符；

       4）类自带存在一个默认的无参数的构造方法，但是一旦自定义了构造方法，该无参数的构造方法被替代，不再存在。

       5）创建对象，存在两次初始化：

          第一次变量加载后，分配空间时，赋值初值；

          第二次构造方法执行时，初始化变量。

二、封装性

    1、信息隐藏

       程序设计者将属性与方法隐藏起来，使程序的访问者无法访问。

       一类中属性与方法被隐藏起来，另外一个类无法访问这些属性与方法。

       隐藏类的属性和方法是用访问权限修饰符：public  protected  default  private。

           注意：没有default修饰符，没有访问权限修饰符时，就是default权限（即默认权限）。

    2、访问权限修饰符

                      同类           同包          不同包子类        不同包
            
       public         Yes            Yes           Yes              Yes               公共的

       protected      Yes            Yes           Yes              No                受保护的

       default        Yes            Yes           No               No                默认的

       private        Yes            No            No               No                私有的


       1）一个类若要访问另一类的属性或方法，首先得能访问到这个类；

          即先拥有对类的访问权限，才能拥有对其属性和方法的访问权限。

       2）public修饰的属性和方法，所有的类均可访问；

          protected修饰的属性和方法，同包中类、或不同包子类可以访问；
          
                   不同包子类不能直接访问，只能继承，再通过子类访问；

          default修饰的属性和方法，同包中类可以访问；

          private修饰的属性和方法，同类可以访问。


    3、封装性

       Java中将类的属性声明为私有的（private），再提供一个或多个公共的（public）方法，实现对该属性的操作。

       为什么要使用封装性？

           使用者对类内部定义的数据(对象的成员变量)的直接操作会导致数据的错误、混乱或安全性问题。

           封装性的好处：

               隐藏一个类的实现细节；

               使用者只能通过事先定制好的方法来访问数据，可以方便地加入控制逻辑，限制对属性的不合理操作；

               便于修改，增强代码的可维护性。

三、继承性

    子类继承父类拥有访问权限的属性和方法，通过子类对象可以直接访问这些继承来的属性和方法。

    1、语法格式：

        修饰符  class 子类 extends 父类 {

            //属性或方法

        }

        父类又称为超类、基类；

        子类又称为派生类。

    2、Java的类只支持单一继承。

        一个子类只有一个父类。

        一个父类可以有多个子类。

    3、继承作用：

       1）实现代码的重用性；

       2）定义了共同的协议。

    4、构造方法不能继承

       父类的构造方法不能被子类继承；

       注意：创建子类对象时，先执行父类的构造方法，再执行子类的构造方法。


四、类与类之间的关系

    is a

        继承关系

        A类   B类

        class B extends A {


        }

        B类继承A类  可以说：B is a A

    has a

        关联关系

        class A {
              
        }

        class B {
             
            private A a;

        }

        B类关联A类   可以说：B has a A 

    use a

        依赖关系

        class A {

            public void method() {}

        }

        class B {

            public void method() {

                A a = new A();
                a.methd();
            }

        }

        B类依赖A类   可以说： B use a A


修饰符：

    类的修饰符

        public

        final


    类成员的修饰符

        public

        protedcted

        private

        static

        final






练习：

   1、创建一个职员类（Employee），属性：姓名，性别，出生年月，入职时间，基本工资，绩效工资

      1) 创建构造方法初始化属性；

      2）创建Setter方法设置属性值；

      3）可以通过两个方式创建职员对象，并初始化值；

      4）创建Getter方法获得属性值；

      5）创建方法输出职员基本信息

         姓名    性别   出生年月  入职时间  基本工资

      6）创建方法输出职员的工资信息

         姓名    本月工资

                 基本工资+绩效工资

   2、创建一个经理类（Manager），继承职员类，扩展属性：奖金

      1）创建构造方法初始化属性；

      2）创建Setter方法设置属性值；

      3）创建Getter方法获得属性值；

      4）创建方法设置职员的绩效工资；

      5）创建方法输出经理的基本信息

         姓名   性别   出生年月  入职时间  基本工资  奖金   本月工资

         注意：不继承绩效工资属性


作业：


   1、关联关系：聚合、组合




































































